apiVersion: apps/v1
kind: Deployment
metadata:
    name: auth-server-deployment
    labels:
        type: restapi
spec:
    selector:
        matchLabels:
            app: auth-server
    replicas: 1
    template:
        metadata:
            name: auth-server-tmpl
            labels:
                app: auth-server
        spec:
            containers:
                -   name: auth-server
                    image: auth-server:latest
                    imagePullPolicy: Never
                    ports:
                        -   containerPort: 8080
                    env:
                        -   name: ENV_FILE
                            value: "dist/envs/.env.development"
                        -   name: PORT
                            value: "8080"
                        -   name: DATABASE_TYPE
                            value: "postgres"
                        -   name: DATABASE_HOST
                            value: "postgres-db-postgresql.postgres.svc.cluster.local"
                        -   name: DATABASE_PORT
                            value: "5432"
                        -   name: DATABASE_NAME
                            value: "auth_server_db"
                        -   name: DATABASE_USERNAME
                            value: "auth_server_db_user"
                        -   name: DATABASE_PASSWORD
                            value: "secret"
                        -   name: DATABASE_SSL
                            value: "false"
                        -   name: MONGO_DATABASE_TYPE
                            value: "REAL"
                        -   name: MONGO_DB_URI
                            value: "mongodb://root:secret@mongo-mongodb.mongo.svc.cluster.local:27017/"
                    readinessProbe:
                        initialDelaySeconds: 5
                        periodSeconds: 5
                        httpGet:
                            path: /api/v1/health-check
                            port: 8080
                    # âœ… Add Resource Limits
                    resources:
                        requests:
                            cpu: "250m" # Request 250 millicores (0.25 CPU)
                            memory: "512Mi" # Request 256MB RAM
                        limits:
                            cpu: "500m" # Max 500 millicores (0.5 CPU)
                            memory: "1024Mi" # Max 512MB RAM
---
apiVersion: apps/v1
kind: Deployment
metadata:
    name: auth-server-ui-deployment
    labels:
        type: restapi
spec:
    selector:
        matchLabels:
            app: auth-server-ui
    replicas: 1
    template:
        metadata:
            name: auth-server-tmpl
            labels:
                app: auth-server-ui
        spec:
            containers:
                -   name: auth-server-ui
                    image: auth-server-ui:latest
                    imagePullPolicy: Never
                    ports:
                        -   containerPort: 8080
                    env:
                        -   name: PORT
                            value: "8080"
                        -   name: AUTH_SERVER
                            value: 'http://auth-server-api.auth-server.svc.cluster.local:8080/api'
                    readinessProbe:
                        initialDelaySeconds: 5
                        periodSeconds: 5
                        httpGet:
                            path: /
                            port: 8080
                    resources:
                        requests:
                            cpu: "250m" # Request 250 millicores (0.25 CPU)
                            memory: "256Mi" # Request 256MB RAM
                        limits:
                            cpu: "250m" # Max 500 millicores (0.5 CPU)
                            memory: "256Mi" # Max 512MB RAM
---
# services.yaml
apiVersion: v1
kind: Service
metadata:
    name: auth-server-api
spec:
    type: ClusterIP
    selector:
        app: auth-server
    ports:
        -   protocol: "TCP"
            port: 8080
---
# services.yaml
apiVersion: v1
kind: Service
metadata:
    name: auth-server-web
spec:
    type: ClusterIP
    selector:
        app: auth-server-ui
    ports:
        -   protocol: "TCP"
            port: 8080
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
    name: auth-server
    namespace: auth-server
spec:
    entryPoints:
        - web
    routes:
        - match: Host(`auth.oauth2.local`)
          kind: Rule
          services:
              - name: auth-server-web
                port: 8080

